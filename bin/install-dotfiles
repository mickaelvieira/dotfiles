#!/bin/bash

set -e -u -o pipefail
# set -x

declare -r RESET_ALL="\x1b[0m"
declare -r BG_RED="\x1b[41m"
declare -r BG_BLUE="\x1b[44m"
declare -r BG_MAGENTA="\x1b[45m"
declare -r FG_WHITE="\x1b[97m"
declare -r FG_RED="\x1b[31m"
declare -r FG_BLUE="\x1b[34m"
declare -r FG_MAGENTA="\x1b[35m"

error() {
    echo -e "${BG_RED}${FG_WHITE}ERROR${RESET_ALL}  ${FG_RED}$1${RESET_ALL}" >&2
}

info() {
    echo -e "${BG_BLUE}${FG_WHITE}INFO${RESET_ALL}  ${FG_BLUE}$1${RESET_ALL}"
}

warning() {
    echo -e "${BG_MAGENTA}${FG_WHITE}WARNING${RESET_ALL}  ${FG_MAGENTA}$1${RESET_ALL}"
}

declare -r HOME_DIR=${HOME:-}
declare -r DF_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)"

if [[ -z "${HOME_DIR}" ]]; then
    error "HOME directory cannot be an empty string"
    exit 1
fi

create_symlink() {

    local target="$1"
    local symlink="$2"
    local backup="${symlink}.orig"

    if [[ -f $symlink || -d $symlink ]]; then
        info "Moving existing location ${symlink} to ${backup}"
        mv "${symlink}" "${backup}"
    fi

    if [[ ! -f $target && ! -d $target ]]; then
        error "Target ${target} is neither a file nor a directory"
        exit 1
    fi

    info "Creating symlink ${symlink}"
    ln -fs "${target}" "${symlink}"
}

ask_confirm() {

    local confirm_config=
    local type_config="$1"

    read -e -p "Do you want install the ${type_config} configuration? [Y/n]: " confirm_config

    [[ -z $confirm_config ]] && confirm_config="y"

    echo $confirm_config
}

install_bash() {
    local files=(
        .bashrc
        .bash_prompt
        .bash_options
        .bash_export
        .bash_profile
        .bash_aliases
        .bash_functions
        .dircolors
    )

    for file in ${files[*]}; do
        create_symlink "${DF_DIR}/bash/$file" "${HOME_DIR}/$file"
    done
}

install_git() {
    if [[ ! -f "${HOME_DIR}/git-prompt.sh" ]]; then
        info "Fetching git-prompt.sh"
        curl -s https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -o "${HOME_DIR}/git-prompt.sh"
    fi

    local files=(
        .gitconfig
        .gitignore
        .gitattributes
    )

    for file in ${files[*]}; do
        create_symlink "${DF_DIR}/git/$file" "${HOME_DIR}/$file"
    done
}

install_vim() {
    create_symlink "${DF_DIR}/vim/.vim" "${HOME_DIR}/.vim"
    create_symlink "${DF_DIR}/vim/.vimrc" "${HOME_DIR}/.vimrc"

    info "Fetching instant-markdown.vim "
    curl -s https://raw.githubusercontent.com/suan/vim-instant-markdown/master/after/ftplugin/markdown/instant-markdown.vim -o "${HOME_DIR}/.vim/after/ftplugin/markdown/instant-markdown.vim"

    info "Fetching plug.vim"
    curl -s https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim -o "${HOME_DIR}/.vim/autoload/plug.vim"

    warning "Don't forget to run PlugInstall!"
}

install_tmux() {
    create_symlink "${DF_DIR}/tmux/.tmux.conf" "${HOME_DIR}/.tmux.conf"
}

install_mysql() {
    create_symlink "${DF_DIR}/mysql/.my.cnf" "${HOME_DIR}/.my.cnf"
    create_symlink "${DF_DIR}/grc/.grcat" "${HOME_DIR}/.grcat"
    warning "Don't forget to install grc 'sudo apt-get install -y grc'"
}

install_terminator() {
    [[ ! -d "${HOME_DIR}/.config/terminator" ]] && mkdir -p "${HOME_DIR}/.config/terminator"
    create_symlink "${DF_DIR}/terminator/config" "${HOME_DIR}/.config/terminator/config"
}

main() {
    [[ $(ask_confirm "bash" ) == "y" ]] && install_bash
    [[ $(ask_confirm "git") == "y" ]] && install_git
    [[ $(ask_confirm "vim") == "y" ]] && install_vim
    [[ $(ask_confirm "tmux") == "y" ]] && install_tmux
    [[ $(ask_confirm "MySQL") == "y" ]] && install_mysql
    [[ $(ask_confirm "Terminator") == "y" ]] && install_terminator

    source ~/.bashrc
}

main

